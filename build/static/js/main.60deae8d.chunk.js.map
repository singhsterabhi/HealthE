{"version":3,"sources":["components/firebase.js","components/WeightChart.js","components/DisplayWeightData.js","components/App.js","components/AddWeights.js","components/Header.js","index.js"],"names":["fire","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","WeightChart","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","console","log","newDateString","date","moment","format","labels","data","key","push","x","y","config","type","datasets","label","backgroundColor","borderColor","fill","pointRadius","lineTension","borderWidth","options","responsive","maintainAspectRatio","title","text","legend","display","scales","xAxes","distribution","time","parser","tooltipFormat","scaleLabel","labelString","ticks","source","autoskip","callback","value","index","values","parseInt","yAxes","tooltips","intersect","mode","callbacks","tooltipItem","myData","datasetIndex","parseFloat","toFixed","ctx","document","getElementById","getContext","Chart","defaults","global","defaultFontColor","window","myLineChart","react_default","a","createElement","id","className","Component","database","DisplayWeightData","weightData","_this2","ref","once","then","snapshot","setState","val","data-toggle","data-target","aria-expanded","aria-controls","aria-labelledby","data-parent","DisplayWeightData_WeightsTable","components_WeightChart","d","WeightsTable","el","keys","map","m","_props$data$m","weight","Date","toLocaleString","year","month","day","App","components_DisplayWeightData","AddWeights","handleChange","e","defineProperty","target","name","AddWeight","preventDefault","_this$state","getTime","set","onSubmit","htmlFor","placeholder","onChange","Header","_ref","children","path","react_router_dom","to","style","fontWeight","aria-label","ReactDOM","render","react_router","exact","components_Header","components_App","components_AddWeights"],"mappings":"sRAaeA,QAFFC,cATE,CACXC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,uCACbC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,iECsHRC,sBAxHb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,GACbC,QAAQC,IAAIV,GAHKC,oFAOjB,IAEMU,EAAgB,SAAAC,GACpB,OAAOC,IAAOD,GAAME,OAHL,gBAQbC,EAAS,GACTC,EAAO,GAEX,IAAK,IAAIC,KAAOb,KAAKJ,MAAL,EAGde,EAAOG,KAAKP,EAAcP,KAAKJ,MAAL,EAAgBiB,GAAhB,OAC1BD,EAAKE,KAAK,CACRC,EAAGR,EAAcP,KAAKJ,MAAL,EAAgBiB,GAAhB,MACjBG,EAAGhB,KAAKJ,MAAL,EAAgBiB,GAAhB,SAGPR,QAAQC,IAAIK,GACZN,QAAQC,IAAIM,GAGZ,IAAIK,EAAS,CACXC,KAAM,OACNN,KAAM,CACJD,OAAQA,EACRQ,SAAU,CACR,CACEC,MAAO,SACPC,gBAAiB,wBACjBC,YAAa,wBACbC,MAAM,EACNX,KAAMA,EACNM,KAAM,OACNM,YAAa,EACbC,YAAa,EACbC,YAAa,KAInBC,QAAS,CACPC,YAAY,EACZC,qBAAqB,EACrBC,MAAO,CACLC,KAAM,UAERC,OAAQ,CACNC,SAAS,GAEXC,OAAQ,CACNC,MAAO,CACL,CACEjB,KAAM,OACNkB,aAAc,SACdC,KAAM,CACJC,OAzDK,cA2DLC,cAAe,MAEjBC,WAAY,CACVP,SAAS,EACTQ,YAAa,QAEfC,MAAO,CACLC,OAAQ,OACRC,UAAU,EACVC,SAAU,SAASC,EAAOC,EAAOC,GAC/B,OAAIA,EAAOD,GACFtC,IAAOwC,SAASD,EAAOD,GAAP,MAAwB,KAAKrC,OAClD,cAEQoC,MAKpBI,MAAO,CACL,CACEV,WAAY,CACVP,SAAS,EACTQ,YAAa,cAKrBU,SAAU,CACRC,WAAW,EACXC,KAAM,QACNC,UAAW,CACTlC,MAAO,SAASmC,EAAaC,GAC3B,IAAIpC,EAAQoC,EAAOrC,SAASoC,EAAYE,cAAcrC,OAAS,GAK/D,OAJIA,IACFA,GAAS,MAEXA,GAASsC,WAAWH,EAAYT,OAAOa,QAAQ,GACxCvC,OAObwC,EAAMC,SAASC,eAAe,WAAWC,WAAW,MACxDC,IAAMC,SAASC,OAAOC,iBAAmB,QACzCC,OAAOC,YAAc,IAAIL,IAAMJ,EAAK3C,oCAGpC,OAAOqD,EAAAC,EAAAC,cAAA,UAAQC,GAAG,UAAUC,UAAU,gBArHhBC,cCCpBC,EAAWzF,EAAKyF,WAEhBC,cACJ,SAAAA,IAAc,IAAAhF,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6E,IACZhF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+E,GAAA1E,KAAAH,QACKI,MAAQ,CACX0E,WAAY,IAHFjF,mFAOM,IAAAkF,EAAA/E,KAClB4E,EACGI,IAAI,gBACJC,KAAK,SACLC,KAAK,SAAAC,GAGJJ,EAAKK,SAAS,CAAEN,WAAYK,EAASE,2CAKzC,OACEf,EAAAC,EAAAC,cAAA,OAAKC,GAAG,oBAAoBC,UAAU,aACpCJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaD,GAAG,oBAC7BH,EAAAC,EAAAC,cAAA,MAAIE,UAAU,mCACZJ,EAAAC,EAAAC,cAAA,UAAQC,GAAG,WACTC,UAAU,uBACVxD,KAAK,SACLoE,cAAY,WACZC,cAAY,eACZC,gBAAc,OACdC,gBAAc,eANhB,gBAWFnB,EAAAC,EAAAC,cAAA,OACEC,GAAG,cACHC,UAAU,sCACVgB,kBAAgB,aAChBC,cAAY,qBACZrB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2CAA2CD,GAAG,gBAC3DH,EAAAC,EAAAC,cAACoB,EAAD,CAAchF,KAAMZ,KAAKI,MAAM0E,gBAIrCR,EAAAC,EAAAC,cAAA,OAAKC,GAAG,eAAeC,UAAU,8BAC/BJ,EAAAC,EAAAC,cAACqB,EAAD,CAAaC,EAAG9F,KAAKI,MAAM0E,sBA9CLH,aAqD1BoB,EAAe,SAAAnG,GACnB,IAAMoG,EAAK,CACTlG,OAAOmG,KAAKrG,EAAMgB,MAAMsF,IAAI,SAAAC,GAAK,IAAAC,EACRxG,EAAMgB,KAAKuF,GAA5BE,EADyBD,EACzBC,OAAQ7F,EADiB4F,EACjB5F,KACVsF,EAAI,IAAIQ,KAAK9F,EAAO,aAMxB,OACE8D,EAAAC,EAAAC,cAAA,MAAI3D,IAAKsF,GACP7B,EAAAC,EAAAC,cAAA,UAAKsB,EAAES,eAAe,QAPV,CACdC,KAAM,UACNC,MAAO,OACPC,IAAK,aAKHpC,EAAAC,EAAAC,cAAA,UAAK6B,OAMb,OACE/B,EAAAC,EAAAC,cAAA,SAAOE,UAAU,sEACfJ,EAAAC,EAAAC,cAAA,SAAOE,UAAU,IACfJ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,sBAGJF,EAAAC,EAAAC,cAAA,aAAQwB,KAKCnB,ICzEA8B,cAhBb,SAAAA,IAAc,IAAA9G,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2G,IACZ9G,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6G,GAAAxG,KAAAH,QACKI,MAAQ,GAFDP,qHAQZ,OACEyE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAACoC,EAAD,cAXUjC,qBCCZC,UAAWzF,EAAKyF,YAsEPiC,6MAnEbzG,MAAQ,CACNiG,OAAQ,GACR7F,KAAM,MAGRsG,aAAe,SAAAC,GACblH,EAAKuF,SAALtF,OAAAkH,EAAA,EAAAlH,CAAA,GAAiBiH,EAAEE,OAAOC,KAAOH,EAAEE,OAAOnE,WAG5CqE,UAAY,SAAAJ,GACVA,EAAEK,iBADa,IAAAC,EAEQxH,EAAKO,MAAtBiG,EAFSgB,EAEThB,OAAQ7F,EAFC6G,EAED7G,KACVsF,EAAI,IAAIQ,KAAK9F,GAAM8G,UAEvBjH,QAAQC,IAAIwF,GACZlB,EACGI,IAAI,cAAgBc,GACpByB,IAAI,CACHlB,SACA7F,SAED0E,KAAK,WACJ7E,QAAQC,IAAI,wBACZT,EAAKuF,SAAS,CAAEiB,OAAQ,GAAI7F,KAAM,gFAKtC,OACE8D,EAAAC,EAAAC,cAAA,OAAKC,GAAG,aACNH,EAAAC,EAAAC,cAAA,QAAMgD,SAAUxH,KAAKmH,WAEjB7C,EAAAC,EAAAC,cAAA,SAAOiD,QAAQ,cAAc/C,UAAU,IAAvC,UAIAJ,EAAAC,EAAAC,cAAA,SACEE,UAAU,eACVD,GAAG,cACHiD,YAAY,eACZxG,KAAK,OACLgG,KAAK,SACLpE,MAAO9C,KAAKI,MAAMiG,OAClBsB,SAAU3H,KAAK8G,eAEjBxC,EAAAC,EAAAC,cAAA,SAAOiD,QAAQ,YAAY/C,UAAU,IAArC,QAIAJ,EAAAC,EAAAC,cAAA,SACEE,UAAU,eACVD,GAAG,YACHiD,YAAY,aACZxG,KAAK,OACLgG,KAAK,OACLpE,MAAO9C,KAAKI,MAAMI,KAClBmH,SAAU3H,KAAK8G,eAEjBxC,EAAAC,EAAAC,cAAA,UAAQC,GAAG,kBAAkBvD,KAAK,SAASwD,UAAU,iBAArD,gBA3DaC,aCqCViD,UAvCA,SAAAC,GAAqB,IAAnBC,EAAmBD,EAAnBC,SAASC,EAAUF,EAAVE,KAExB,OADE1H,QAAQC,IAAIyH,GAEZzD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,IACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iGACbJ,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAMtD,UAAU,eAAeuD,GAAG,IAAIC,MAAO,CAACC,WAAW,MAAzD,YAGA7D,EAAAC,EAAAC,cAAA,UACEE,UAAU,qCACVxD,KAAK,SACLoE,cAAY,WACZC,cAAY,0BACZE,gBAAc,yBACdD,gBAAc,QACd4C,aAAW,qBACX9D,EAAAC,EAAAC,cAAA,QAAME,UAAU,yBAGlBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,+CAA+CD,GAAG,0BAC/DH,EAAAC,EAAAC,cAAA,MAAIE,UAAU,mBACZJ,EAAAC,EAAAC,cAAA,MAAIE,UAAW,aAAoB,MAAPqD,EAAW,SAAS,KAC9CzD,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAMtD,UAAU,WAAWuD,GAAG,KAA9B,SAIF3D,EAAAC,EAAAC,cAAA,MAAIE,UAAW,aAAoB,SAAPqD,EAAc,SAAS,KACjDzD,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAMtD,UAAU,WAAWuD,GAAG,QAA9B,mBAOPH,KC9BPO,IAASC,OACPhE,EAAAC,EAAAC,cAACwD,EAAA,EAAD,KACE1D,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,YACEjE,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAOC,OAAK,EAACT,KAAK,IAAIO,OAAQ,kBAAIhE,EAAAC,EAAAC,cAACiE,EAAD,CAAQV,KAAK,KAAIzD,EAAAC,EAAAC,cAACkE,EAAD,UACnDpE,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAOR,KAAK,OAAOO,OAAQ,kBAAIhE,EAAAC,EAAAC,cAACiE,EAAD,CAAQV,KAAK,QAAOzD,EAAAC,EAAAC,cAACmE,EAAD,YAIvD9E,SAASC,eAAe","file":"static/js/main.60deae8d.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\n\nconst config = {\n    apiKey: \"AIzaSyCv5bo0qLFQ6YxRkQk04ssUvJsqjCZ8KuU\",\n    authDomain: \"healthe-8a7fd.firebaseapp.com\",\n    databaseURL: \"https://healthe-8a7fd.firebaseio.com\",\n    projectId: \"healthe-8a7fd\",\n    storageBucket: \"healthe-8a7fd.appspot.com\",\n    messagingSenderId: \"73806913302\"\n  };\n\nconst fire = firebase.initializeApp(config);\n\nexport default fire;\n","import React, { Component } from \"react\";\nimport Chart from \"chart.js\";\nimport moment from \"moment\";\nimport \"../css/WeightCharts.css\";\n\nclass WeightChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    console.log(props);\n  }\n\n  componentDidUpdate() {\n    let dateFormat = \"MMM D, YYYY\";\n\n    const newDateString = date => {\n      return moment(date).format(dateFormat);\n    };\n\n    // console.log(newDate(\"2018-08-01\"));\n\n    let labels = [];\n    let data = [];\n    // console.log(this.props);\n    for (let key in this.props[\"d\"]) {\n      //   console.log(\"q\");\n      //   console.log(this.props[\"d\"][key]);\n      labels.push(newDateString(this.props[\"d\"][key][\"date\"]));\n      data.push({\n        x: newDateString(this.props[\"d\"][key][\"date\"]),\n        y: this.props[\"d\"][key][\"weight\"]\n      });\n    }\n    console.log(labels);\n    console.log(data);\n\n    // let color = Chart.helpers.color;\n    let config = {\n      type: \"line\",\n      data: {\n        labels: labels,\n        datasets: [\n          {\n            label: \"Weight\",\n            backgroundColor: \"rgba(231, 76, 60,0.2)\",\n            borderColor: \"rgba(192, 57, 43,1.0)\",\n            fill: true,\n            data: data,\n            type: \"line\",\n            pointRadius: 0,\n            lineTension: 0,\n            borderWidth: 2\n          }\n        ]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        title: {\n          text: \"Weight\"\n        },\n        legend: {\n          display: false\n        },\n        scales: {\n          xAxes: [\n            {\n              type: \"time\",\n              distribution: \"series\",\n              time: {\n                parser: dateFormat,\n                // round: 'day'\n                tooltipFormat: \"ll\"\n              },\n              scaleLabel: {\n                display: true,\n                labelString: \"Date\"\n              },\n              ticks: {\n                source: \"auto\",\n                autoskip: true,\n                callback: function(value, index, values) {\n                  if (values[index])\n                    return moment(parseInt(values[index][\"value\"], 10)).format(\n                      \"MMM DD, YY\"\n                    );\n                  else return value;\n                }\n              }\n            }\n          ],\n          yAxes: [\n            {\n              scaleLabel: {\n                display: true,\n                labelString: \"Weights\"\n              }\n            },\n          ]\n        },\n        tooltips: {\n          intersect: false,\n          mode: \"index\",\n          callbacks: {\n            label: function(tooltipItem, myData) {\n              var label = myData.datasets[tooltipItem.datasetIndex].label || \"\";\n              if (label) {\n                label += \": \";\n              }\n              label += parseFloat(tooltipItem.value).toFixed(2);\n              return label;\n            }\n          }\n        }\n      }\n    };\n\n    let ctx = document.getElementById(\"myChart\").getContext(\"2d\");\n    Chart.defaults.global.defaultFontColor = \"black\";\n    window.myLineChart = new Chart(ctx, config);\n  }\n  render() {\n    return <canvas id='myChart' className='col ' />;\n  }\n}\n\nexport default WeightChart;\n","import React, { Component } from \"react\";\nimport fire from \"./firebase\";\nimport \"firebase/database\";\nimport \"../css/DisplayWeightData.css\";\nimport WeightChart from \"./WeightChart\";\n\nconst database = fire.database();\n\nclass DisplayWeightData extends Component {\n  constructor() {\n    super();\n    this.state = {\n      weightData: {}\n    };\n  }\n\n  componentDidMount() {\n    database\n      .ref(\"/weightData/\")\n      .once(\"value\")\n      .then(snapshot => {\n        // console.log(snapshot);\n        // console.log(snapshot.val());\n        this.setState({ weightData: snapshot.val() });\n      });\n  }\n\n  render() {\n    return (\n      <div id=\"displayWeightData\" className=\"container\">\n        <div className='accordion ' id='accordionExample'>\n          <h2 className='mb-0 row justify-content-center'>\n            <button id=\"showData\"\n              className='btn btn-light btn-sm'\n              type='button'\n              data-toggle='collapse'\n              data-target='#collapseOne'\n              aria-expanded='true'\n              aria-controls='collapseOne'>\n              Weight Data\n            </button>\n          </h2>\n\n          <div\n            id='collapseOne'\n            className='collapse row justify-content-center'\n            aria-labelledby='headingOne'\n            data-parent='#accordionExample'>\n            <div className='card-body table-responsive col col-md-5 ' id=\"weightsTable\">\n              <WeightsTable data={this.state.weightData} />\n            </div>\n          </div>\n        </div>\n        <div id='weightsChart' className=\"row justify-content-center\">\n          <WeightChart d={this.state.weightData} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst WeightsTable = props => {\n  const el = [\n    Object.keys(props.data).map(m => {\n      let { weight, date } = props.data[m];\n      let d = new Date(date + \"T00:00:00\");\n      const options = {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\"\n      };\n      return (\n        <tr key={m}>\n          <td>{d.toLocaleString(\"en-US\", options)}</td>\n          <td>{weight}</td>\n        </tr>\n      );\n    })\n  ];\n\n  return (\n    <table className=\"table table-dark table-hover table-sm table-striped table-bordered\">\n      <thead className=\"\">\n        <tr>\n          <th>Date</th>\n          <th>weight</th>\n        </tr>\n      </thead>\n      <tbody>{el}</tbody>\n    </table>\n  );\n};\n\nexport default DisplayWeightData;\n","import React, { Component } from \"react\";\nimport DisplayWeightData from \"./DisplayWeightData\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return (\n      <div className='App'>\n        <DisplayWeightData />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\nimport fire from \"./firebase\";\nimport \"firebase/database\";\nimport \"../css/AddWeights.css\";\nconst database = fire.database();\n\nclass AddWeights extends Component {\n  state = {\n    weight: \"\",\n    date: \"\"\n  };\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  AddWeight = e => {\n    e.preventDefault();\n    let { weight, date } = this.state;\n    let d = new Date(date).getTime();\n\n    console.log(d);\n    database\n      .ref(\"weightData/\" + d)\n      .set({\n        weight,\n        date\n      })\n      .then(() => {\n        console.log(\"Successfully written\");\n        this.setState({ weight: \"\", date: \"\" });\n      });\n  };\n\n  render() {\n    return (\n      <div id=\"addWeight\">\n        <form onSubmit={this.AddWeight} >\n          \n            <label htmlFor='inputWeight' className=''>\n              Weight\n            </label>\n\n            <input\n              className='form-control'\n              id='inputWeight'\n              placeholder='Input Weight'\n              type='text'\n              name='weight'\n              value={this.state.weight}\n              onChange={this.handleChange}\n            />\n            <label htmlFor='inputDate' className=''>\n              Date\n            </label>\n\n            <input\n              className='form-control'\n              id='inputDate'\n              placeholder='Input Date'\n              type='date'\n              name='date'\n              value={this.state.date}\n              onChange={this.handleChange}\n            />\n            <button id=\"addWeightButton\" type='submit' className='btn btn-dark '>\n              ADD\n            </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddWeights;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport '../css/Header.css'\n\nconst Header = ({children,path}) => {\n    console.log(path)\n  return (\n    <div className=\"\">\n      <nav className='navbar navbar-expand-lg navbar-dark bg-dark justify-content-between justify-content-md-center'>\n        <Link className='navbar-brand' to='/' style={{fontWeight:600}}>\n          Health-E\n        </Link>\n        <button\n          className='navbar-toggler justify-content-end'\n          type='button'\n          data-toggle='collapse'\n          data-target='#navbarSupportedContent'\n          aria-controls='navbarSupportedContent'\n          aria-expanded='false'\n          aria-label='Toggle navigation'>\n          <span className='navbar-toggler-icon' />\n        </button>\n\n        <div className='collapse navbar-collapse justify-content-end' id='navbarSupportedContent' >\n          <ul className='nav navbar-nav ' >\n            <li className={'nav-item '+(path===\"/\"?\"active\":\"\")}>\n              <Link className='nav-link' to='/'>\n                Home \n              </Link>\n            </li>\n            <li className={'nav-item '+(path===\"/add\"?\"active\":\"\")}>\n              <Link className='nav-link' to='/add'>\n                Add Weights \n              </Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n      {children}\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n// import \"./index.css\";\nimport App from \"./components/App\";\nimport AddWeights from \"./components/AddWeights\";\nimport Header from './components/Header';\n\nReactDOM.render(\n  <Router>\n    <Switch>path\n      <Route exact path=\"/\" render={()=><Header path=\"/\"><App/></Header>}/>\n      <Route path=\"/add\" render={()=><Header path=\"/add\"><AddWeights/></Header>}/>\n    </Switch>\n  </Router>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}